---
import {type CollectionEntry, getCollection} from "astro:content";
import Layout from "@layouts/Layout.astro";
import NewsletterList from "@components/NewsletterList.astro";
import {makeLinkSafe, compare} from "../../utils";
import Badge from "../../components/Badge.astro";

type newsletterType = CollectionEntry<'newsletter'>;
const allNewsletter  = await getCollection("newsletter") as Array<newsletterType>;
const categories = new Set(allNewsletter.flatMap(n => n.data.categories).filter(c => typeof(c) == "string"));
const tags = new Set(allNewsletter.flatMap(n => n.data.tags).filter(t => typeof(t) == "string"));

const count = function(newsletters: Array<newsletterType>, dataName: ("categories" | "tags" | "authors"), item: any) {
    return newsletters.filter(n => (n.data[dataName] ?? []).indexOf(item) >= 0).length
}
---

<Layout title="fintag - Newsletter Archiv">
    <main class="px-4 ">
        <section class="lg:px-24 container mx-auto">
            <h1>Newsletter Archiv</h1>
            <NewsletterList newsletters={allNewsletter} />
        </section>

        <section class="my-12 max-w-prose mx-auto">
            <h2 class="text-center">Kategorien</h2>
            <ul class="flex flex-wrap gap-x-1 gap-y-0.5 justify-center">
                <!-- map every category with amount of newsletter with that tag, sort by amount reverse, then by tag name -->
                {Array.from(categories)
                    .map(c => ({category: c, amount: count(allNewsletter, "categories", c)}))
                    .sort((p1, p2) => compare(p1.amount, p2.amount, true) || compare(p1.category, p2.category))
                    .map(({category, amount}) =>
                        <li>
                            <Badge href={`/categories/${makeLinkSafe(category)}`}>
                                {category}
                                ({amount})
                            </Badge>
                        </li>)}
            </ul>
        </section>

        <section class="my-12 max-w-prose mx-auto">
            <h2 class="text-center">Tags</h2>
            <ul class="flex flex-wrap gap-x-1 gap-y-0.5 justify-center">
                <!-- map every tag with amount of newsletter with that tag, sort by amount reverse, then by tag name -->
                {Array.from(tags)
                    .map(t => ({tag: t, amount: count(allNewsletter, "tags", t)}))
                    .sort((p1, p2) => compare(p1.amount, p2.amount, true) || compare(p1.tag, p2.tag))
                    .map(({tag, amount}) =>
                        <li>
                            <Badge color="secondary" href={`/tags/${makeLinkSafe(tag)}`}>
                                {tag}
                                ({amount})
                            </Badge>
                        </li>)}
            </ul>
        </section>
    </main>
</Layout>
